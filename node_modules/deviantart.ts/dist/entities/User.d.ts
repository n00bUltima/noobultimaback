import { DeviantArtFriendSearch, DeviantArtStatus, DeviantArtUserFriends, DeviantArtUserProfile, DeviantArtUserStatuses, DeviantArtWatchers } from "../types/index";
export declare class User {
    private readonly accessToken;
    private readonly api;
    constructor(accessToken: string);
    /**
     * Gets all of the friends of the specified user, or yourself if none is specified.
     */
    friends: (params?: {
        username?: string;
        offset?: number;
        limit?: number;
        expand?: string;
        mature_content?: boolean;
    }) => Promise<DeviantArtUserFriends>;
    /**
     * Searches friends by their username.
     */
    friendsSearch: (params: {
        query: string;
        username?: string;
        mature_content?: boolean;
    }) => Promise<DeviantArtFriendSearch>;
    /**
     * Gets all of the statuses of the specified user.
     */
    statuses: (params?: {
        username?: string;
        offset?: number;
        limit?: number;
        mature_content?: boolean;
    }) => Promise<DeviantArtUserStatuses>;
    /**
     * Fetches a specific status from its status id.
     */
    status: (params: {
        statusid: string;
        mature_content?: boolean;
    }) => Promise<DeviantArtStatus>;
    /**
     * Fetches the profile of the specified user.
     */
    profile: (params?: {
        username?: string;
        ext_collections?: boolean;
        ext_galleries?: boolean;
        expand?: string;
        mature_content?: boolean;
    }) => Promise<DeviantArtUserProfile>;
    /**
     * Fetches all the watchers of the specified user.
     */
    watchers: (params?: {
        username?: string;
        offset?: number;
        limit?: number;
        expand?: string;
        mature_content?: boolean;
    }) => Promise<DeviantArtWatchers>;
}
