import { DeviantArtDeviation, DeviationContent, DeviationDownload, DeviationEmbeddedContent, DeviationMetaData, DeviationWhoFaved } from "../types/index";
export declare class Deviation {
    private readonly accessToken;
    private readonly api;
    constructor(accessToken: string);
    /**
     * Gets a deviation from its deviation id.
     */
    get: (params: {
        deviationid: string;
        expand?: string;
    }) => Promise<DeviantArtDeviation>;
    /**
     * Gets the meta data for multiple deviations.
     */
    metaData: (params: {
        deviationids: string[];
        ext_submission?: boolean;
        ext_camera?: boolean;
        ext_stats?: boolean;
        ext_collection?: boolean;
        mature_content?: boolean;
    }) => Promise<DeviationMetaData>;
    /**
     * Get a list of users who favorited the deviation.
     */
    whoFaved: (params: {
        deviationid: string;
        offset?: number;
        limit?: number;
    }) => Promise<DeviationWhoFaved>;
    /**
     * Fetch the full data of a deviation.
     */
    content: (params: {
        deviationid: string;
        mature_content?: boolean;
    }) => Promise<DeviationContent>;
    /**
     * Fetches the file download of a deviation, if available.
     */
    download: (params: {
        deviationid: string;
        mature_content?: boolean;
    }) => Promise<DeviationDownload>;
    /**
     * Fetches the embedded content in a deviation.
     */
    embeddedContent: (params: {
        deviationid: string;
        offset_deviationid?: string;
        offset?: number;
        limit?: number;
        mature_content?: boolean;
    }) => Promise<DeviationEmbeddedContent>;
}
